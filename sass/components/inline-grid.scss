.row {
	margin-left: $inline-grid-gutter-mobile / -2;
	margin-right: $inline-grid-gutter-mobile / -2;
	list-style: none;
	min-height: 1px;
	vertical-align: top;
	font-size: 0;
	line-height: 0;

	@include breakpoint(#{$inline-grid-breakpoint}) {
		margin-left: $inline-grid-gutter-desktop / -2;
		margin-right: $inline-grid-gutter-desktop / -2;
	}

	> .col {
		@include body-font-size;
		display: inline-block;
		width: 100%;
		padding-left: $inline-grid-gutter-mobile / 2;
		padding-right: $inline-grid-gutter-mobile / 2;
		box-sizing: inherit;
		vertical-align: top;

		@include breakpoint(#{$inline-grid-breakpoint}) {
			padding-left: $inline-grid-gutter-desktop / 2;
			padding-right: $inline-grid-gutter-desktop / 2;
		}
	}
}

// Vertical Gutter
.row.gutter--vertical {
	margin-bottom: -$inline-grid-gutter-mobile;
	
	> .col {
		padding-bottom: $inline-grid-gutter-mobile;
	}

	@include breakpoint(#{$inline-grid-breakpoint}) {
		margin-bottom: -$inline-grid-gutter-desktop;
	
		> .col {
			padding-bottom: $inline-grid-gutter-desktop;
		}
	}
}

// Gutter options
@each $gutter-name, $gutter-size in $inline-grid-gutter-extra {
	.row.gutter--#{$gutter-name} {
		margin-left: $gutter-size / -2;
		margin-right: $gutter-size / -2;
		
		> .col {
			padding-left: $gutter-size / 2;
			padding-right: $gutter-size / 2;
		}
	}
	.row.gutter--vertical.gutter--#{$gutter-name} {
		margin-bottom: -$gutter-size;
		
		> .col {
			padding-bottom: $gutter-size;
		}
	}
}

// Responsive Gutter
@each $breakpoint-name, $breakpoint-size in $breakpoints {
	@media (min-width: #{$breakpoint-size}) {
		@each $gutter-name, $gutter-size in $inline-grid-gutter-extra {
			.row.gutter--#{$gutter-name}--#{$breakpoint-name} {
				margin-left: $gutter-size / -2;
				margin-right: $gutter-size / -2;
				
				> .col {
					padding-left: $gutter-size / 2;
					padding-right: $gutter-size / 2;
				}
			}
			.row.gutter--vertical.gutter--#{$gutter-name}--#{$breakpoint-name} {
				margin-bottom: -$gutter-size;
				
				> .col {
					padding-bottom: $gutter-size;
				}
			}
		}
	}
}


// Alignment
.row.align--right {
	text-align: right;
	
	> .col {
		text-align: left;
	}
}

.row.align--center {
	text-align: center;
	
	> .col {
		text-align: left;
	}
}

.row.align--middle {
	> .col {
		vertical-align: middle;
	}
}

.row.align--top {
	> .col {
		vertical-align: top;
	}
}

.row.align--bottom {
	> .col {
		vertical-align: bottom;
	}
}

.row.align--baseline {
	> .col {
		vertical-align: baseline;
	}
}

// Column Direction
.row.direction--rev {
	direction: rtl;
	text-align: left;
	
	> .col {
		direction: ltr;
		text-align: left;
	}
}

.row.direction--forward {
	direction: ltr;
	text-align: left;
	
	> .col {
		direction: ltr;
		text-align: left;
	}
}

// Responsive direction
@each $breakpoint-name, $breakpoint-size in $breakpoints {
	@media (min-width: #{$breakpoint-size}) {
		.row.direction--rev--#{$breakpoint-name} {
			direction: rtl;
			text-align: left;
			
			> .col {
				direction: ltr;
				text-align: left;
			}
		}

		.row.direction--forward--#{$breakpoint-name} {
			direction: ltr;
			text-align: left;
			
			> .col {
				direction: ltr;
				text-align: left;
			}
		}
	}
}

// Column Sizes
@for $i from 0 through $inline-grid-column-size {
	.col.c#{$i} {
		width: (100% / $inline-grid-column-size) * $i;
	}
}

// Responsive Column Sizes
@each $breakpoint-name, $breakpoint-size in $breakpoints {
	@media (min-width: #{$breakpoint-size}) {
		@for $i from 0 through $inline-grid-column-size {
			.col.c#{$i}--#{$breakpoint-name} {
				width: (100% / $inline-grid-column-size) * $i;
			}
		}
	}
}