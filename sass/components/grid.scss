.gr {
	display: grid;
	grid-gap: $grid-gutter-mobile;

	@include breakpoint(#{$grid-breakpoint}) {
		grid-gap: $grid-gutter-desktop;
	}
}

// Gutter options
@each $gutter-name, $gutter-size in $grid-gutter-extra {
	.gr.gtr--#{$gutter-name} {
		grid-gap: $gutter-size;
	}
}

// Responsive Gutter
@each $breakpoint-name, $breakpoint-size in $breakpoints {
	@media (min-width: #{$breakpoint-size}) {
		@each $gutter-name, $gutter-size in $grid-gutter-extra {
			.gr.gtr--#{$gutter-name}--#{$breakpoint-name} {
				grid-gap: $gutter-size;
			}
		}
	}
}


// Alignment
.gr.jl {justify-items: start;}
.gr.jc {justify-items: center;}
.gr.jr {justify-items: end;}
.gr.at {align-items: start;}
.gr.am {align-items: center;}
.gr.ab {align-items: end;}

// Column Direction
.gr.rev {
	direction: rtl;
	text-align: left;
	
	> .gc {
		direction: ltr;
		text-align: left;
	}
}

.gr.fwd {
	direction: ltr;
	text-align: left;
	
	> .gc {
		direction: ltr;
		text-align: left;
	}
}

// Column Sizes
@for $i from 0 through $grid-column-size {
	.gc.c#{$i} {
		grid-column: span $grid-column-size;
	}
}

// Responsive Column Sizes
@each $breakpoint-name, $breakpoint-size in $breakpoints {
	@media (min-width: #{$breakpoint-size}) {
		@for $i from 0 through $grid-column-size {
			.gc.c#{$i}--#{$breakpoint-name} {
				grid-column: span $grid-column-size;
			}
		}
	}
}