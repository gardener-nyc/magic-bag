//
// === Directions ===
//

$sides: (
	t : top,
	b : bottom,
	l : left,
	r : right,
	j : justify,
);

$alignments: (
	l : left,
	r : right,
	c : center,
);

//
// === Colors ===
//

$all-colors: (
	white         : #FFF,
	black         : #000,
);

@function color($color-name) {
	$color-found: map-has-key($all-colors, $color-name);
	@if ($color-found == true) {
		@return map-get($all-colors, $color-name);
	} @else {
		@warn "Color " + #{$color-name} + " doesn't exist.";
	}
}

//
// === Breakpoints ===
//

$breakpoints : (
	xs  : 400px,
	sm  : 600px,
	md  : 800px,
	lg  : 1000px,
	xl  : 1200px,
);

@mixin breakpoint($size) {
	$breakpoint-found: map-has-key($breakpoints, $size);
	@if ($breakpoint-found == true) {
		$breakpoint: map-get($breakpoints, $size);
		@media (min-width: #{$breakpoint}) {
			@content;
		}
	} @else {
		@warn "Breakpoint size " + #{$size} + " doesn't exist.";
	}
}

//
// === Components ===
//

// Spacer
$spacer-max: 10;
$spacer-size: 10px;

// Inline Grid
$inline-grid-column-size: 12;
$inline-grid-breakpoint: md;
$inline-grid-gutter-mobile: 10px;
$inline-grid-gutter-desktop: 10px;
$inline-grid-gutter-extra: (
	none : 0px,
);

// Grid Container
$grid-padding-mobile: 10px;
$grid-padding-desktop: 20px;
$grid-max-width: 1920px;

// CSS Grid
$grid-column-sizes: (
	xs:  12,
	lg:  12,
);
$grid-gutter-sizes: (
	xs:  10px,
	lg:  10px,
);
$grid-column-max: max(map-values($grid-column-sizes)...);
$grid-gutter-extra: (
	none : 0px,
);

@function gutter($gutter-name) {
	$gutter-found: map-has-key($inline-grid-gutter-extra, $gutter-name);
	@if ($gutter-found == true) {
		@return map-get($inline-grid-gutter-extra, $gutter-name);
	} @else {
		@warn "Gutter " + #{$gutter-name} + " doesn't exist.";
	}
}

//
// === Typography ===
//

$typography-breakpoint: md;

$font-size-body-mobile: 16px;
$font-size-body-desktop: 16px;

$line-height-body-mobile: 24px;
$line-height-body-desktop: 24px;